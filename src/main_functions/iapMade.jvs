handlers.iapMade = function(args, context)
{
		//this code will fire whenever a IAP is succesfully validated
  	var ps=server.GetPlayerStatistics(
  	{
     	PlayFabId: currentPlayerId,
     	StatisticNames: ["IAPValue"]
  	}).Statistics;

  	var iapVal = Number(GetValueFromStatistics(ps, "IAPValue", 0));

  	//BMBundleInfo

	switch(args.bundle)
	{
		case "co.tamatem.downshiftdrift.gold01":
		iapVal += 99;
		break;
		case "co.tamatem.downshiftdrift.gold02":
		iapVal += 499;
		break;
		case "co.tamatem.downshiftdrift.gold03":
		iapVal += 999;
		break;
		case "co.tamatem.downshiftdrift.gold04":
		iapVal += 1999;
		break;
		case "co.tamatem.downshiftdrift.gold05":
		iapVal += 4999;
		break;
		case "co.tamatem.downshiftdrift.gold06":
		iapVal += 9999;
		break;
		case "co.tamatem.downshiftdrift.bundle01":
		iapVal += 599;

		  var userInventoryObject = server.GetUserInventory(
		  {
		    PlayFabId: currentPlayerId,
		  }
		  );

		  var catalogData = server.GetCatalogItems(
		  {
		  	CatalogVersion: "BMBundleInfo"
		  });

		  for(var i = 0; i < userInventoryObject.Inventory.length; i++)
		  {
		  	if(userInventoryObject.Inventory[i].ItemId == args.bundle)
		  	{
		  		server.ConsumeItem(
		  		{
		  			PlayFabId: currentPlayerId,
		  			ItemInstanceId : userInventoryObject.Inventory[i].ItemInstanceId, // why the fuck is this green?
		  			ConsumeCount : 1
		  		});

		  	}



		  }

		break;
		default:
		if(args.debug == true) log.debug("InvalidPurchaseParameter");
		break;
	}

	var suArray = [];
	var su = {StatisticName : "IAPValue", Value: iapVal};
	suArray.push(su);

	var updateRequest = server.UpdatePlayerStatistics(
	  {
	    PlayFabId: currentPlayerId,
	    Statistics: suArray
	  }
	  );
}
