function checkCarDataValidity(b,l){if(void 0==b.CustomData){try{var a={CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemInstanceId,Data:a});a={TiresLvl:"0",TurboLvl:"0",PaintId:"0",DecalId:"0",RimsId:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemInstanceId,Data:a});for(var e=0,d=0;d<l.Catalog.length;d++)if(l.Catalog[d].ItemId==b.ItemId){var g=
JSON.parse(l.Catalog[d].CustomData),e=parseInt(g.basePr);break}a={PlatesId:"0",WindshieldId:"0",Pr:e};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemInstanceId,Data:a})}catch(k){return"PlayFabError"}return{CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0",TiresLvl:"0",TurboLvl:"0",PaintId:"0",DecalId:"0",RimsId:"0",PlatesId:"0",WindshieldId:"0",Pr:e}}return"OK"}function generateFailObj(b){return{Result:"Failed",Message:b}}
function generateErrObj(b){return{Result:"Error",Message:b}}function checkBalance(b,l,a,e){if("SC"==b){if(a<l)return generateFailObj("NotEnoughSC")}else if(e<l)return generateFailObj("NotEnoughHC");return"OK"}
function calculateLeague(b){var l=server.GetTitleData({Keys:["LeagueSubdivisions","SubdivisionTrophyRanges"]});if(void 0==l.Data.LeagueSubdivisions||void 0==l.Data.SubdivisionTrophyRanges)return 1;for(var a=JSON.parse(l.Data.LeagueSubdivisions).leagues,l=JSON.parse(l.Data.SubdivisionTrophyRanges).subdivisions,e=0;e<a.length;e++)if(!(Number(b)>Number(l[a[e]])))return e}
function recalculateCarPr(b,l,a,e){var d=0,g;g=void 0==a?server.GetCatalogItems({CatalogVersion:"CarCards"}):a;for(a=0;a<g.Catalog.length;a++)if(g.Catalog[a].ItemId==l){a=JSON.parse(g.Catalog[a].CustomData);d+=parseInt(a.basePr)+parseInt(a.prPerLvl)*(parseInt(b.CarLvl)-1);break}e=void 0==e?server.GetCatalogItems({CatalogVersion:"PartCards"}):e;b={Exhaust:b.ExhaustLvl,Engine:b.EngineLvl,Gearbox:b.GearboxLvl,Suspension:b.SuspensionLvl,Tires:b.TiresLvl,Turbo:b.TurboLvl};for(a=0;a<e.Catalog.length;a++)l=
JSON.parse(e.Catalog[a].CustomData),d+=parseInt(l.basePr)+parseInt(l.prPerLvl)*b[e.Catalog[a].ItemId];return d}
function GenerateBlackMarket(b){var l=1,a=server.GetPlayerStatistics({PlayFabId:b,StatisticNames:["League"]});0!=a.Statistics.length&&(l=a.Statistics[0].Value.toString());var e=server.GetCatalogItems({CatalogVersion:"PartCards"}),a={};a.BMTime=(new Date).getTime();var d=Math.floor(Math.random()*e.Catalog.length),g=JSON.parse(e.Catalog[d].CustomData);if(void 0==g)return generateErrObj("Part card "+e.Catalog[c].ItemId+" has no custom data.");a.BMItem0=e.Catalog[d].ItemId+"_"+g.BMCurrType+"_"+g.BMbasePrice+
"_0_"+g.BMpriceIncrPerBuy;var k=Math.floor(Math.random()*e.Catalog.length);k==d&&(k=e.Catalog.length-d-1);g=JSON.parse(e.Catalog[k].CustomData);if(void 0==g)return generateErrObj("Part card "+e.Catalog[c].ItemId+" has no custom data.");a.BMItem1=e.Catalog[k].ItemId+"_"+g.BMCurrType+"_"+g.BMbasePrice+"_0_"+g.BMpriceIncrPerBuy;for(var e=server.GetCatalogItems({CatalogVersion:"CarCards"}),g=[],k=[],c=0;c<e.Catalog.length;c++){d=JSON.parse(e.Catalog[c].CustomData);if(void 0==d)return generateErrObj("Car card "+
e.Catalog[c].ItemId+" has no custom data.");d.unlockedAtRank>l+1||("false"==d.rareCar?g.push(e.Catalog[c].ItemId+"_"+d.BMCurrType+"_"+d.BMbasePrice+"_0_"+d.BMpriceIncrPerBuy):k.push(e.Catalog[c].ItemId+"_"+d.BMCurrType+"_"+d.BMbasePrice+"_0_"+d.BMpriceIncrPerBuy))}0>=g.length?(a.BMItem2=k[Math.floor(Math.random()*k.length)],a.BMItem3=k[Math.floor(Math.random()*k.length)]):0>=k.length?(a.BMItem2=g[Math.floor(Math.random()*g.length)],a.BMItem3=g[Math.floor(Math.random()*g.length)]):(a.BMItem2=g[Math.floor(Math.random()*
g.length)],a.BMItem3=k[Math.floor(Math.random()*k.length)]);server.UpdateUserInternalData({PlayFabId:b,Data:a});l=[];l.push("BlackMarketResetMinutes");b=server.GetTitleData({PlayFabId:b,Keys:l});a.BMTime=60*parseInt(b.Data.BlackMarketResetMinutes);return a}
function GetCurrentBlackMarket(b,l){var a={},e=new Date,d=[];d.push("BlackMarketResetMinutes");d=server.GetTitleData({PlayFabId:b,Keys:d});a.BMTime=60*parseInt(d.Data.BlackMarketResetMinutes)-Math.floor((e.getTime()-l.Data.BMTime.Value)/1E3);for(e=0;4>e;e++)a["BMItem"+e]=l.Data["BMItem"+e].Value;return a}
function GetValueFromStatistics(b,l,a){var e;log.debug("length "+b.length);for(var d=0;d<b.length;d++)log.debug(b[d]),b[d].StatisticName===l&&(e=b[d]);return void 0===e?void 0!==a?a:0:Number(e.Value)}
handlers.buyChest=function(b,l){var a=server.GetUserInventory({PlayFabId:currentPlayerId});if("OK"!=checkBalance(b.curr,b.cost,a.VirtualCurrency.SC,a.VirtualCurrency.HC))return generateFailObj("not enough money");if(0<b.cost){var a=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:b.curr,Amount:b.cost}),e={};e[a.VirtualCurrency]=a.Balance;return{Result:"OK",Message:"ChestBought",InventoryChange:{VirtualCurrency:e}}}return{Result:"OK",Message:"ChestBought",InventoryChange:{}}};
handlers.endGame=function(b,l){var a="01",e,d="0";"rWin"==b.outcome&&(d="1");var g=server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["WinLoss"]});0!=g.Statistics.length&&(e=g.Statistics[0].Value.toString(),a=Number(e).toString(2));var g=0,k;k=Array(a.length);for(var c=0;c<k.length-1;c++)k[c]=a[c];k[k.length-1]=d;a=k;d=a.length;for(c=0;c<a.length;c++)"1"==a[c]&&g++;k=Math.round(g/d*100);var f=server.GetTitleData({Key:["LeagueSubdivisions","SubdivisionTrophyRanges"]}),d=0,h,g=server.GetPlayerStatistics({PlayFabId:currentPlayerId,
StatisticNames:["TrophyCount"]});0!=g.Statistics.length&&(d=g.Statistics[0].Value,log.debug("getting trophy count "+g.Statistics[0].Value));h=d=Number(d);g=server.GetUserInternalData({PlayFabId:currentPlayerId,Keys:["trophyLose","trophyWin"]});log.debug("pDat.Data[trophyLose] "+g.Data.trophyLose.Value);log.debug("pDat.Data[trophyWin] "+g.Data.trophyWin.Value);g=void 0==g.Data.trophyLose||void 0==g.Data.trophyWin?45:Number(g.Data.trophyLose.Value)+Number(g.Data.trophyWin.Value);"rWin"==b.outcome&&
(d+=g);log.debug("trophies change: "+h+" => "+d);g=calculateLeague(d);for(c=e=0;c<a.length;c++)"1"==a[c]&&(e+=Math.pow(2,c));c=[];c.push({StatisticName:"WinLoss",Version:"0",Value:e});a={StatisticName:"TrophyCount",Version:"0",Value:d};c.push(a);a={StatisticName:"League",Version:"0",Value:g};c.push(a);server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:c});if("rOot"==b.outcome){var r={TrophyCount:d,League:g};return{Result:r}}a=JSON.parse(f.Data.SubdivisionTrophyRanges);for(c=0;c<a.subdivisions.length;c++)if(h<
a.subdivisions[c]){r=c;break}c=[];c.push({Key:b.envIndex+"_"+b.courseIndex+"_RecPos",Value:b.recordingPos});c.push({Key:b.envIndex+"_"+b.courseIndex+"_RecRot",Value:b.recordingRot});c.push({Key:b.envIndex+"_"+b.courseIndex+"_RecHeader",Value:b.recordingHeader});server.UpdateUserReadOnlyData({PlayFabId:currentPlayerId,Data:c});c=server.GetTitleInternalData({Key:"RecSubDivision"+r}).Data["RecSubDivision"+r];if(void 0==c)a=[],k={wl:k,e:b.envIndex,c:b.courseIndex,uId:currentPlayerId},a.push(k);else{a=
JSON.parse(c);k={wl:k,e:b.envIndex,c:b.courseIndex,uId:currentPlayerId};f=!1;for(c=h=0;c<a.length;c++)a[c].uId==currentPlayerId&&h++;if(2<h)return r={TrophyCount:d,League:g},{Result:r};for(c=0;c<a.length;c++)if(a[c].e==b.envIndex&&a[c].c==b.courseIndex){f=!0;a[c]=k;if(1==a.length)break;if(0<c)if(a[c].wl>a[c-1].wl){if(c==a.length-1)break;for(h=c+1;h<a.length;h++)if(a[h-1].wl>a[h].wl)e=a[h],a[h]=a[h-1],a[h-1]=e;else break}else for(h=c-1;0<=h;h--)if(a[h+1].wl<a[h].wl)e=a[h],a[h]=a[h+1],a[h+1]=e;else break;
else for(h=c+1;h<a.length;h++)if(a[h-1].wl>a[h].wl)e=a[h],a[h]=a[h-1],a[h-1]=e;else break}0==f&&a.push(k)}c=JSON.stringify(a);server.SetTitleInternalData({Key:"RecSubDivision"+r,Value:c});r={TrophyCount:d,League:g};return{Result:r}};
function UpdateExperience(b,l,a,e,d,g){b=server.GetCatalogItems({CatalogVersion:b});l=JSON.parse(b.Catalog[l].CustomData)[a];isNaN(Number(l))?(a=Number(l.length),e>=a&&(e=a-1),e=Number(l[e])):e=Number(l);g=g||server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["Experience"]});g=GetValueFromStatistics(g,"Experience",0)+e;if(!d)return g;server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:[{StatisticName:"Experience",Version:"0",Value:g}]})}
handlers.getServerTime=function(b,l){return{time:new Date}};handlers.giveMoney=function(b){b=server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:b.curr,Amount:b.amount});var l={};l[b.VirtualCurrency]=b.Balance;return{Result:"OK",Message:"CurrencyChanged",InventoryChange:{VirtualCurrency:l}}};
handlers.grantItems=function(b){for(var l=server.GetUserInventory({PlayFabId:currentPlayerId}),a,e=!1,d=0;d<l.Inventory.length;d++)if(l.Inventory[d].ItemId==b.itemId&&l.Inventory[d].CatalogVersion==b.catalogId){a=void 0==l.Inventory[d].CustomData?b.amount:void 0==l.Inventory[d].CustomData.Amount?b.amount:isNaN(Number(l.Inventory[d].CustomData.Amount))?b.amount:Number(l.Inventory[d].CustomData.Amount)+b.amount;a={Amount:a};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:l.Inventory[d].ItemInstanceId,
Data:a});e=!0;break}0==e&&(l=[],l.push(b.itemId),l=server.GrantItemsToUser({CatalogVersion:b.catalogId,PlayFabId:currentPlayerId,ItemIds:l}),a={Amount:b.amount},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:l.ItemGrantResults[0].ItemInstanceId,Data:a}));return{Result:"OK",Message:"InventoryUpdated",InventoryChange:{Inventory:[{ItemId:b.itemId,CatalogVersion:b.catalogId,CustomData:a}]}}};
handlers.initServerData=function(b){b=[];var l={StatisticName:"TrophyCount",Version:"0",Value:"0"};b.push(l);l={StatisticName:"League",Version:"0",Value:"0"};b.push(l);server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:b});b=server.GrantItemsToUser({CatalogVersion:"Customization",PlayFabId:currentPlayerId,ItemIds:["Decals","PaintJobs","Plates","Rims","WindshieldText"]});for(var l={0:"Owned"},a=0;a<b.ItemGrantResults.length;a++)server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:b.ItemGrantResults[a].ItemInstanceId,Data:l});b=[];b.push("FordFocus");b=server.GrantItemsToUser({CatalogVersion:"CarsProgress",PlayFabId:currentPlayerId,ItemIds:b});l={CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l});l={TiresLvl:"0",TurboLvl:"0",PaintId:"0",DecalId:"0",RimsId:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l});l={PlatesId:"0",WindshieldId:"0",Pr:"10"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l});l=[];l.push("Engine");l=server.GrantItemsToUser({CatalogVersion:"PartCards",PlayFabId:currentPlayerId,ItemIds:l});server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:l.ItemGrantResults[0].ItemInstanceId,Data:{Amount:"5"}});l={CarLvl:"1",EngineLvl:"0",
ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l})};
handlers.openChest=function(b,l){var a=server.GetUserInventory({PlayFabId:currentPlayerId});if(0<b.currCost){if("OK"!=checkBalance(b.currType,b.currCost,a.VirtualCurrency.SC,a.VirtualCurrency.HC))return generateFailObj("not enough money");server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:b.currType,Amount:b.currCost})}for(var e in b.currencyReq)0<b.currencyReq[e]&&server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:e,Amount:b.currencyReq[e]});var d;
for(e in b.carCardsRequest)if(b.carCardsRequest.hasOwnProperty(e)){d=!1;for(var g=0;g<a.Inventory.length;g++)if(a.Inventory[g].ItemId==e&&"CarCards"==a.Inventory[g].CatalogVersion){d=void 0==a.Inventory[g].CustomData?Number(b.carCardsRequest[e]):void 0==a.Inventory[g].CustomData.Amount?Number(b.carCardsRequest[e]):isNaN(Number(a.Inventory[g].CustomData.Amount))?Number(b.carCardsRequest[e]):Number(a.Inventory[g].CustomData.Amount)+Number(b.carCardsRequest[e]);d={Amount:d};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:a.Inventory[g].ItemInstanceId,Data:d});d=!0;break}0==d&&(g=[e],g=server.GrantItemsToUser({CatalogVersion:"CarCards",PlayFabId:currentPlayerId,ItemIds:g}),d={Amount:b.carCardsRequest[e]},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:g.ItemGrantResults[0].ItemInstanceId,Data:d}))}for(e in b.partCardsRequest)if(b.partCardsRequest.hasOwnProperty(e)){d=!1;for(g=0;g<a.Inventory.length;g++)if(a.Inventory[g].ItemId==e&&"PartCards"==a.Inventory[g].CatalogVersion){d=
void 0==a.Inventory[g].CustomData?Number(b.partCardsRequest[e]):void 0==a.Inventory[g].CustomData.Amount?Number(b.partCardsRequest[e]):isNaN(Number(a.Inventory[g].CustomData.Amount))?Number(b.partCardsRequest[e]):Number(a.Inventory[g].CustomData.Amount)+Number(b.partCardsRequest[e]);d={Amount:d};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.Inventory[g].ItemInstanceId,Data:d});d=!0;break}0==d&&(g=[e],g=server.GrantItemsToUser({CatalogVersion:"PartCards",PlayFabId:currentPlayerId,
ItemIds:g}),d={Amount:b.partCardsRequest[e]},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:g.ItemGrantResults[0].ItemInstanceId,Data:d}))}return{Result:"OK",Message:"InventoryUpdated",InventoryChange:server.GetUserInventory({PlayFabId:currentPlayerId})}};
handlers.purchaseBMItem=function(b,l){if(0>b.itemId||3<b.itemId)return generateFailObj("invalid item index");var a=[];a.push("BMItem"+b.itemId);var a=server.GetUserInternalData({PlayFabId:currentPlayerId,Keys:a}),e=server.GetUserInventory({PlayFabId:currentPlayerId}),a=a.Data["BMItem"+b.itemId].Value.split("_"),d=e.VirtualCurrency[a[1]];5!=a.length&&generateErrObj("User Black Market corrupted. Try again tomorrow");var g;g=2>b.itemId?"PartCards":"CarCards";var k=parseInt(a[2])+parseInt(a[3])*parseInt(a[4]),
d=checkBalance(a[1],k,d,d);if("OK"!=d)return d;for(var c,f,d=0;d<e.Inventory.length;d++)if(e.Inventory[d].ItemId==a[0]&&e.Inventory[d].CatalogVersion==g){c=e.Inventory[d].ItemInstanceId;void 0===e.Inventory[d].CustomData?f={Amount:1}:void 0===e.Inventory[d].CustomData.Amount?f={Amount:1}:(f=Number(e.Inventory[d].CustomData.Amount)+1,isNaN(f)&&(f=1),f={Amount:f});server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:c,Data:f});break}void 0===c&&(c=[],c.push(a[0]),c=server.GrantItemsToUser({CatalogVersion:g,
PlayFabId:currentPlayerId,ItemIds:c}).ItemGrantResults[0].ItemInstanceId,void 0===c?generateErrObj("grantRequest denied"):(f={Amount:1},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:c,Data:f})));c=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:a[1],Amount:k});k=a[0]+"_"+a[1]+"_"+a[2]+"_"+(parseInt(a[3])+1)+"_"+a[4];e={};e["BMItem"+b.itemId]=k;server.UpdateUserInternalData({PlayFabId:currentPlayerId,Data:e});f=[{ItemId:a[0],CatalogVersion:g,
CustomData:f}];g={};g[c.VirtualCurrency]=c.Balance;a=b.itemId+"_"+a[2]+"_"+(parseInt(a[3])+1)+"_"+a[4];d={Inventory:f,VirtualCurrency:g};return{Result:"OK",Message:"InventoryUpdate",InventoryChange:d,BMItemChange:a}};
handlers.purchaseItems=function(b,l){var a=server.GetUserInventory({PlayFabId:currentPlayerId}),e=a.VirtualCurrency.SC,d=a.VirtualCurrency.HC;switch(b.purchaseType){case "carUpgrade":for(var g=server.GetCatalogItems({CatalogVersion:"CarCards"}),k=!1,c,f=0;f<a.Inventory.length;f++)if(a.Inventory[f].ItemId==b.carId&&"CarsProgress"==a.Inventory[f].CatalogVersion){k=!0;c=a.Inventory[f];break}for(var h,f=0;f<g.Catalog.length;f++)if(g.Catalog[f].ItemId==b.carId){h=JSON.parse(g.Catalog[f].CustomData);break}if(void 0===
h)return log.error("cardInfo undefined!"),h={Result:"Error",Message:"CardNotFoundForCarwithID: "+b.carId+". It is possible that the carCard ID and the Car ID do not coincide. Check Playfab catalog data."};if(!0===k){var r=parseInt(c.CustomData.CarLvl)+1,t=parseInt(h.baseCurrCost)+parseInt(c.CustomData.CarLvl)*parseInt(h.currCostPerLvl),d=checkBalance(h.currType,t,e,d);if("OK"!=d)return d;d=parseInt(h.baseCardCost)+parseInt(c.CustomData.CarLvl)*parseInt(h.cardCostPerLvl);c.CustomData.CarLvl=r;for(var k=
!1,m,f=0;f<a.Inventory.length;f++)if(a.Inventory[f].ItemId==b.carId&&"CarCards"==a.Inventory[f].CatalogVersion){k=!0;try{if(void 0===a.Inventory[f].CustomData)return generateFailObj("Insufficient cards, CusotmData undefined");if(void 0===a.Inventory[f].CustomData.Amount)return generateFailObj("Insufficient cards, CusotmData.Amount udnefined");if(Number(a.Inventory[f].CustomData.Amount)>=d)a.Inventory[f].CustomData.Amount-=d,m={Amount:a.Inventory[f].CustomData.Amount},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:a.Inventory[f].ItemInstanceId,Data:m});else return generateFailObj("Insufficient cards for real: "+a.Inventory[f].CustomData.Amount+" vs "+d)}catch(w){return generateFailObj("Insufficient cards")}break}if(!1===k)return generateFailObj("No cards found");a=recalculateCarPr(c.CustomData,c.ItemId,g,void 0);f={CarLvl:r,Pr:a};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:c.ItemInstanceId,Data:f});var n;0<t&&(n=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,
VirtualCurrency:h.currType,Amount:t}));a=[{ItemId:b.carId,CatalogVersion:"CarCards",CustomData:m},{ItemId:b.carId,CatalogVersion:"CarsProgress",CustomData:f}];h={};f={Inventory:a};void 0!=n&&(h[n.VirtualCurrency]=n.Balance,f.VirtualCurrency=h);h={Result:"OK",Message:"InventoryUpdate",InventoryChange:f}}else{for(var k=!1,z,f=0;f<a.Inventory.length;f++)if(a.Inventory[f].ItemId==b.carId&&"CarCards"==a.Inventory[f].CatalogVersion){k=!0;try{if(void 0==a.Inventory[f].CustomData)return generateFailObj("Insufficient cards, CustomData null");
if(void 0==a.Inventory[f].CustomData.Amount)return generateFailObj("Insufficient cards, CustomData.Amount null");if(Number(a.Inventory[f].CustomData.Amount)>=Number(h.baseCardCost))z=a.Inventory[f].ItemInstanceId,a.Inventory[f].CustomData.Amount-=h.baseCardCost,m={Amount:a.Inventory[f].CustomData.Amount};else return generateFailObj("Insufficient cards: "+a.Inventory[f].CustomData.Amount+" vs "+h.baseCardCost+".")}catch(w){return generateFailObj("Insufficient cards: "+w)}break}if(0==k)return generateFailObj("No cards found");
d=checkBalance(h.currType,h.baseCurrCost,e,d);if("OK"!=d)return d;f=[];f.push(b.carId);d=server.GrantItemsToUser({CatalogVersion:"CarsProgress",PlayFabId:currentPlayerId,ItemIds:f});if(0==d.ItemGrantResults[0].Result)return log.error("Something went wrong while giving user the item, refunding cards"),generateFailObj("Something went wrong while giving user the item, refunding cards.");server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:z,Data:m});0<h.baseCurrCost&&(n=
server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:h.currType,Amount:h.baseCurrCost}));f={CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:d.ItemGrantResults[0].ItemInstanceId,Data:f});f={TiresLvl:"0",TurboLvl:"0",PaintId:h.defaultPaintID,DecalId:"0",RimsId:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:d.ItemGrantResults[0].ItemInstanceId,
Data:f});f={PlatesId:"0",WindshieldId:"0",Pr:h.basePr};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:d.ItemGrantResults[0].ItemInstanceId,Data:f});for(var e=d=!1,p,f=0;f<a.Inventory.length;f++)if("PaintJobs"==a.Inventory[f].ItemId){e=!0;void 0!=a.Inventory[f].CustomData?h.defaultPaintID in a.Inventory[f].CustomData?d=!0:(p={},p[h.defaultPaintID]="Owned"):(p={},p[h.defaultPaintID]="Owned");void 0!=p&&server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:a.Inventory[f].ItemInstanceId,Data:p});break}0==e&&(paintToGive=[],paintToGive.push("PaintJobs"),a=server.GrantItemsToUser({CatalogVersion:"Customization",PlayFabId:currentPlayerId,ItemIds:paintToGive}),p={},p[h.defaultPaintID]="Owned",server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.ItemGrantResults[0].ItemInstanceId,Data:p}));f={CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0",TiresLvl:"0",TurboLvl:"0",PaintId:h.defaultPaintID,
DecalId:"0",RimsId:"0",PlatesId:"0",WindshieldId:"0",Pr:h.basePr};a=[{ItemId:b.carId,CatalogVersion:"CarCards",CustomData:m},{ItemId:b.carId,CatalogVersion:"CarsProgress",CustomData:f}];0==d&&(f={},f[h.defaultPaintID]="Owned",a.push({ItemId:"PaintJobs",CatalogVersion:"Customization",CustomData:f}));h={};f={Inventory:a};void 0!=n&&(h[n.VirtualCurrency]=n.Balance,f.VirtualCurrency=h);h={Result:"OK",Message:"InventoryUpdateNewCar",InventoryChange:f}}return h;case "partUpgrade":m=server.GetCatalogItems({CatalogVersion:"CarsProgress"});
p=!1;for(f=0;f<m.Catalog.length;f++)if(m.Catalog[f].ItemId==b.carId){p=!0;break}if(0==p)return log.error("invalid car ID"),h={Result:"Error",Message:"car with ID: "+b.carId+" not found in catalog."};m=server.GetCatalogItems({CatalogVersion:"PartCards"});p=!1;for(f=0;f<m.Catalog.length;f++)if(m.Catalog[f].ItemId==b.partId){h=JSON.parse(m.Catalog[f].CustomData);p=!0;break}if(0==p)return log.error("invalid part ID"),h={Result:"Error",Message:"part with ID: "+b.partId+" not found in catalog."};k=!1;for(f=
0;f<a.Inventory.length;f++)if(a.Inventory[f].ItemId==b.carId&&"CarsProgress"==a.Inventory[f].CatalogVersion){k=!0;c=a.Inventory[f];break}if(0==k)return generateFailObj("car with ID: "+b.carId+" not found in user inventory.");p=!1;for(f=0;f<a.Inventory.length;f++)if(a.Inventory[f].ItemId==b.partId&&"PartCards"==a.Inventory[f].CatalogVersion){p=!0;g={};k={Exhaust:"ExhaustLvl",Engine:"EngineLvl",Gearbox:"GearboxLvl",Suspension:"SuspensionLvl",Tires:"TiresLvl",Turbo:"TurboLvl"};z=parseInt(h.baseCardCost,
10)+parseInt(c.CustomData[k[b.partId]],10)*parseInt(h.cardCostPerLvl,10);var u=parseInt(c.CustomData[k[b.partId]])+1,t=Number(h.baseCurrCost)+parseInt(c.CustomData[k[b.partId]])*Number(h.currCostPerLvl);g[k[b.partId]]=u;c.CustomData[k[b.partId]]=u;d=checkBalance(h.currType,t,e,d);if("OK"!=d)return d;try{if(void 0!=a.Inventory[f].CustomData&&void 0!=a.Inventory[f].CustomData.Amount&&a.Inventory[f].CustomData.Amount>=z)a.Inventory[f].CustomData.Amount-=z,r={Amount:a.Inventory[f].CustomData.Amount},
server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.Inventory[f].ItemInstanceId,Data:r});else return generateFailObj("Insufficient cards")}catch(w){return generateFailObj("Insufficient cards")}break}if(0==p)return generateFailObj("Part not found");0<t&&(n=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:h.currType,Amount:t}));a=recalculateCarPr(c.CustomData,c.ItemId,void 0,m);g.Pr=a;server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:c.ItemInstanceId,Data:g});a=[{ItemId:b.partId,CatalogVersion:"PartCards",CustomData:r},{ItemId:b.carId,CatalogVersion:"CarsProgress",CustomData:g}];h={};f={Inventory:a};void 0!=n&&(h[n.VirtualCurrency]=n.Balance,f.VirtualCurrency=h);UpdateExperience("Balancing",0,"Parts_0",1,!0);return h={Result:"OK",Message:"InventoryUpdatePart",InventoryChange:f};case "custPurchase":c=server.GetCatalogItems({CatalogVersion:"Customization"});h=0;n="SC";for(f=0;f<c.Catalog.length;f++)if(c.Catalog[f].ItemId==
b.custId){u=c.Catalog[f];h=JSON.parse(c.Catalog[f].CustomData);f=b.custVal+",Cost";n=h[b.custVal+",Curr"];h=h[f];d=checkBalance(n,h,e,d);if("OK"!=d)return d;break}if(void 0==u)return log.error("Customization does not exist in catalog"),h={Result:"Error",Message:"Customization does not exist in catalog."};for(var q,f=0;f<a.Inventory.length;f++)if(a.Inventory[f].ItemId==b.custId){q=a.Inventory[f];k=a.Inventory[f].ItemInstanceId;if(void 0!=q.CustomData&&String(b.custVal)in q.CustomData)return generateFailObj("User already has this customization.");
break}if(void 0==q){log.info("user doesn't have customization category. Granting ... ");f=[];f.push(b.custId);a=server.GrantItemsToUser({CatalogVersion:"Customization",PlayFabId:currentPlayerId,ItemIds:f});if(0==a.ItemGrantResults[0].Result)return log.error("something went wrong while granting user customization class object"),h={Result:"Error",Message:"something went wrong while granting user customization class object."};k=a.ItemGrantResults[0].ItemInstanceId}a={};a[String(b.custVal)]="Owned";server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:k,Data:a});a=[{ItemId:b.custId,CatalogVersion:"Customization",CustomData:a}];0<h?(n=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:n,Amount:h}),h={},h[n.VirtualCurrency]=n.Balance,f={Inventory:a,VirtualCurrency:h}):f={Inventory:a};return h={Result:"OK",Message:"InventoryUpdateNewCustomization",InventoryChange:f};case "softCurrencyPurchase":n=server.GetCatalogItems({CatalogVersion:"SoftCurrencyStore"});a=!1;for(f=e=0;f<n.Catalog.length;f++)if(n.Catalog[f].ItemId==
b.packId){e=n.Catalog[f].VirtualCurrencyPrices.HC;h=JSON.parse(n.Catalog[f].CustomData);a=!0;break}if(0==a)return h={Result:"Error",Message:"pack with ID: "+b.packId+" not found in catalog."};if(0>=e)return h={Result:"Error",Message:"pack with ID: "+b.packId+" shouldn't have negative cost."};if(e>d)return generateFailObj("Not enough HC.");n=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:"HC",Amount:e});a=server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:"SC",
Amount:h.quantity});h={};h[a.VirtualCurrency]=a.Balance;h[n.VirtualCurrency]=n.Balance;return h={Result:"OK",Message:"SoftCurrencyPurchased",InventoryChange:{VirtualCurrency:h}};default:log.debug("invalid purchase parameter")}};handlers.requestCurrency=function(b){return{VirtualCurrency:server.GetUserInventory({PlayFabId:currentPlayerId}).VirtualCurrency}};
handlers.requestInventory=function(b){b=server.GetUserInventory({PlayFabId:currentPlayerId});for(var l=server.GetCatalogItems({CatalogVersion:"CarCards"}),a=server.GetCatalogItems({CatalogVersion:"PartCards"}),e=!1,d=0;d<b.Inventory.length;d++)if("CarsProgress"==b.Inventory[d].CatalogVersion){var e=!0,g=checkCarDataValidity(b.Inventory[d],l);if("PlayFabError"==g||void 0===g)return generateErrObj("PlayfabError");"OK"==g?log.debug("Data for "+b.Inventory[d].ItemId+" OK"):b.Inventory[d].CustomData=g;
b.Inventory[d].CustomData.Pr=recalculateCarPr(b.Inventory[d].CustomData,b.Inventory[d].ItemId,l,a);g={};g.Pr=b.Inventory[d].CustomData.Pr;server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.Inventory[d].ItemInstanceId,Data:g})}return!1===e?(b=[],b.push("FordFocus"),b=server.GrantItemsToUser({CatalogVersion:"CarsProgress",PlayFabId:currentPlayerId,ItemIds:b}),l={CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0"},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l}),l={TiresLvl:"0",TurboLvl:"0",PaintId:"0",DecalId:"0",RimsId:"0"},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l}),l={PlatesId:"0",WindshieldId:"0",Pr:"10"},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l}),generateErrObj("UserHasNoCars ... reiniting")):b};
handlers.retrieveBlackMarket=function(b,l){var a=[];a.push("BMTime");for(var e=0;4>e;e++)a.push("BMItem"+e);a=server.GetUserInternalData({PlayFabId:currentPlayerId,Keys:a});if(void 0===a.Data.BMTime)return GenerateBlackMarket(currentPlayerId);var e=new Date,d=[];d.push("BlackMarketResetMinutes");d=server.GetTitleData({PlayFabId:currentPlayerId,Keys:d});if(!0===b.reset){a="HC";e=200;d=server.GetTitleData({Keys:["BlackMarketResetCost"]});void 0!==d.Data.BlackMarketResetCost&&(e=d.Data.BlackMarketResetCost.split("_"),
a=e[0],e=Number(e[1]));if(0<e){d=server.GetUserInventory({PlayFabId:currentPlayerId});if("OK"!=checkBalance(a,e,d.VirtualCurrency.SC,d.VirtualCurrency.HC))return generateFailObj("not enough money");e=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:a,Amount:e});a=GenerateBlackMarket(currentPlayerId);d={};d[e.VirtualCurrency]=e.Balance;e={VirtualCurrency:d};a.InventoryChange=e;return a}return GenerateBlackMarket(currentPlayerId)}return e.getTime()-parseInt(a.Data.BMTime.Value)>
6E4*parseInt(d.Data.BlackMarketResetMinutes)?GenerateBlackMarket(currentPlayerId):GetCurrentBlackMarket(currentPlayerId,a)};
handlers.startGame=function(b,l){var a="10",e,d=50,g,k=0;g=server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["WinLoss"]});if(0!=g.Statistics.length){e=g.Statistics[0].Value.toString();a=Number(e).toString(2);g=a.length;for(var c=0;c<a.length;c++)"1"==a[c]&&k++;d=Math.round(k/g*100)}a+="0";20<a.length&&(a=a.slice(1));var f=server.GetTitleData({Key:["LeagueSubdivisions","SubdivisionTrophyRanges","TrophyGainRange","TrophyLoseRange"]});g=server.GetPlayerStatistics({PlayFabId:currentPlayerId,
StatisticNames:["TrophyCount"]});k=0;0!=g.Statistics.length&&(k=g.Statistics[0].Value);var k=Number(k),h=JSON.parse(f.Data.SubdivisionTrophyRanges),r=JSON.parse(f.Data.LeagueSubdivisions),t=43,m=43,n;g=f.Data.TrophyGainRange.split("_");n=f.Data.TrophyLoseRange.split("_");e=Number(g[0]);g=Number(g[1]);for(var f=Number(n[0]),z=Number(n[1]),c=0;c<h.subdivisions.length;c++)if(k<Number(h.subdivisions[c])){t=c;c<h.subdivisions.length-1&&(m=c+1);break}n=Number(h.subdivisions[m])-Number(h.subdivisions[t]);
log.debug("nextSubDivision "+m+" subDivision "+t);log.debug(" sdvalParsed.subdivisions[nextSubDivision] "+h.subdivisions[m]+" sdvalParsed.subdivisions[subDivision] "+h.subdivisions[t]);0>=n&&(n=400);log.debug("subDivisionRange "+n);var p=server.GetTitleInternalData({Keys:"RecSubDivision"+t}).Data["RecSubDivision"+t],m=!1;void 0==p&&(m=!0);var u,q=t="noop",w,c=server.GetUserInternalData({PlayFabId:currentPlayerId,Keys:["lastOpp"]});if(void 0==c.Data||void 0==c.Data.lastOpp)q=t="noop";else for(w=c.Data.lastOpp.Value.split(","),
c=0;c<w.length;c++)0==c&&(t=w[c]),1==c&&(q=w[c]);u=0==m?JSON.parse(p):[];var C=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];15>u.length&&(m=!0);var D=Array(u.length),B=0,p=Array(u.length);w=0;for(var A=Array(u.length),x=0,c=0;c<u.length;c++)1==m&&(C[5*Number(u[c].e)+Number(u[c].c)]=1),u[c].uId!=currentPlayerId&&(D[B]=u[c],B++,u[c].uId!=t&&(p[w]=u[c],w++,u[c].uId!=q&&(A[x]=u[c],x++)));if(1==m){for(c=q=m=0;c<C.length;c++)if(0==C[c]){m=Math.floor(c/5);q=c%5;break}c=server.GetTitleData({Keys:"MasterUser"});if(void 0!=
c.Data.MasterUser&&(c=server.GetUserReadOnlyData({PlayFabId:c.Data.MasterUser,Keys:[m+"_"+q+"_RecPos",m+"_"+q+"_RecRot",m+"_"+q+"_RecHeader"]}),void 0!=c.Data&&void 0!=c.Data[m+"_"+q+"_RecPos"]&&void 0!=c.Data[m+"_"+q+"_RecRot"]&&void 0!=c.Data[m+"_"+q+"_RecHeader"])){t=!0;0==k?(k=g,t=!1):k-=f;1>=k&&(k=1);e=parseInt(a,2);var a=[],y={StatisticName:"WinLoss",Version:"0",Value:e};a.push(y);k={StatisticName:"TrophyCount",Version:"0",Value:k};a.push(k);k={StatisticName:"League",Version:"0",Value:v};a.push(k);
server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:a});a={trophyWin:g,trophyLose:f};0==t&&(a.trophyWin=0,a.trophyLose=0);server.UpdateUserInternalData({PlayFabId:currentPlayerId,Data:a});return{Result:"OK",RecType:"Default",PosData:c.Data[m+"_"+q+"_RecPos"].Value,RotData:c.Data[m+"_"+q+"_RecRot"].Value,HeaderData:c.Data[m+"_"+q+"_RecHeader"].Value,TrophyLose:f,TrophyWin:g,Opp:"Mniezo"}}}if(0==B)return generateErrObj("no valid recording found for this subdivision");v=D;m=B;0<w&&(m=
w,v=p);0<x&&(m=x,v=A);p=m-1;for(c=0;c<m;c++)if(v[c].wl>d){p=c;break}d=Math.min(m,3);q=Array(d);for(c=0;c<d;c++)q[c]=0>=p?v[c]:p>=m-1?v[m-1-c]:v[p-Math.floor(d/2)+c];v=Math.floor(Math.random()*d);c=q[v].uId;d=q[v].e;m=q[v].c;q=server.GetUserReadOnlyData({PlayFabId:c,Keys:[d+"_"+m+"_RecPos",d+"_"+m+"_RecRot",d+"_"+m+"_RecHeader"]});if(void 0==q)return generateErrObj("Did not find recording for this user: "+c);var p=server.GetPlayerCombinedInfo({PlayFabId:c,InfoRequestParameters:{GetUserAccountInfo:!0,
GetUserInventory:!1,GetUserVirtualCurrency:!1,GetUserData:!1,GetUserReadOnlyData:!1,GetCharacterInventories:!1,GetCharacterList:!1,GetTitleData:!1,GetPlayerStatistics:!1}}),A=k,v=Number(calculateLeague(k));w="UserGenerated";x=0<v?Number(h.subdivisions[r.leagues[v-1]]):0;r=v>=r.leagues.length-1?2*x:Number(h.subdivisions[r.leagues[v]]);h=JSON.parse(q.Data[d+"_"+m+"_RecHeader"].Value);void 0!=h&&(y=h.Trophies);y=Number(y);0>=r-x?h=g:Number(Math.abs(A-y))>Number(n)?(h=Math.floor((f+z)/2),f=Math.floor((g+
e)/2),w="Default"):(h=f+Math.floor((z-f)/2*((A-y)/(r-x)+1)),f=e+Math.floor((g-e)/2*((y-A)/(r-x)+1)));r=!0;0==k?(r=!1,k=g):(k-=Number(h),1>=k&&(k=1));e=parseInt(a,2);a=[];y={StatisticName:"WinLoss",Version:"0",Value:e};a.push(y);k={StatisticName:"TrophyCount",Version:"0",Value:k};a.push(k);k={StatisticName:"League",Version:"0",Value:v};a.push(k);server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:a});a={trophyWin:f,trophyLose:h,lastOpp:c+","+t};0==r&&(a.trophyWin=0,a.trophyLose=0);
server.UpdateUserInternalData({PlayFabId:currentPlayerId,Data:a});return{Result:"OK",RecType:w,PosData:q.Data[d+"_"+m+"_RecPos"].Value,RotData:q.Data[d+"_"+m+"_RecRot"].Value,HeaderData:q.Data[d+"_"+m+"_RecHeader"].Value,TrophyLose:h,TrophyWin:f,Opp:p.InfoResultPayload.AccountInfo.TitleInfo.DisplayName}};
handlers.updateCarCust=function(b,l){for(var a=server.GetUserInventory({PlayFabId:currentPlayerId}),e=[],d="-1",g={},k={PaintJobs:{itemOwned:"no",itemCustData:b.paintId,carItemId:"PaintId"},Decals:{itemOwned:"no",itemCustData:b.decalId,carItemId:"DecalId"},Plates:{itemOwned:"no",itemCustData:b.platesId,carItemId:"PlatesId"},Rims:{itemOwned:"no",itemCustData:b.rimsId,carItemId:"RimsId"},WindshieldText:{itemOwned:"no",itemCustData:b.wsId,carItemId:"WindshieldId"}},c=0;c<a.Inventory.length;c++)a.Inventory[c].ItemId==
b.carId&&"CarsProgress"==a.Inventory[c].CatalogVersion&&(d=a.Inventory[c].ItemInstanceId),a.Inventory[c].ItemId in k&&(k[a.Inventory[c].ItemId].itemOwned="yes",k[a.Inventory[c].ItemId].itemCustData in a.Inventory[c].CustomData?g[k[a.Inventory[c].ItemId].carItemId]=k[a.Inventory[c].ItemId].itemCustData:log.debug("user doesn't own: "+a.Inventory[c].ItemId+" "+k[a.Inventory[c].ItemId].itemCustData));if("-1"==d)return generateFailObj("User does not own car with id: "+b.carId);for(var f in k)k.hasOwnProperty(f)&&
"no"==k[f].itemOwned&&e.push(f);if(g=={})return generateFailObj("User doesn't own any of those customizations");server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:d,Data:g});a=[{ItemId:b.carId,CatalogVersion:"CarsProgress",CustomData:g}];if(0<e.length)for(e=server.GrantItemsToUser({CatalogVersion:"Customization",PlayFabId:currentPlayerId,ItemIds:e}),d={0:"Owned"},c=0;c<e.ItemGrantResults.length;c++)server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:e.ItemGrantResults[c].ItemInstanceId,Data:d});return{Result:"OK",Message:"InventoryUpdate",InventoryChange:{Inventory:a}}};
handlers.updateTrophyCount=function(b,l){var a=0,e=server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["TrophyCount"]});0!==e.Statistics.length&&(a=e.Statistics[0].Value);"rStart"==b.val&&(a-=30);0>a&&(a=0);"rWin"==b.val&&(a+=60);if("rLose"==b.val)return{val:a};e=[];e.push({StatisticName:"TrophyCount",Version:"0",Value:a});server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:e});if("rWin"==b.val)return{val:a}};
