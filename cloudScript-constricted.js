handlers.endGame=function(b,l){var a="01",f,e="0";"rWin"==b.outcome&&(e="1");var d=server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["WinLoss"]});0!=d.Statistics.length&&(f=d.Statistics[0].Value.toString(),log.debug("wlStatInt "+f),a=Number(f).toString(2),log.debug("wlStat "+a));var k=0;log.debug("wlStat.length "+a.length);var g=Array(a.length);log.debug("tempString.length "+g.length);for(d=0;d<g.length-1;d++)g[d]=a[d];g[g.length-1]=e;log.debug("tempString "+g);a=g;log.debug("wlStat "+
a);e=a.length;for(d=0;d<a.length;d++)"1"==a[d]&&k++;log.debug("wlStatNew "+a);k=Math.round(k/e*100);log.debug("winRatio "+k);var g=server.GetTitleData({Key:["LeagueSubdivisions","SubdivisionTrophyRanges"]}),e=0,c,d=server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["TrophyCount"]});0!=d.Statistics.length&&(e=d.Statistics[0].Value);c=e;"rWin"==b.outcome&&(e=0>=e?30:e+60);log.debug("trophies change: "+c+" => "+e);for(var h=calculateLeague(e),d=f=0;d<a.length;d++)"1"==a[d]&&(f+=Math.pow(2,
d));log.debug("winLossInt is : "+f+" from : "+a+" parseInt(wlStat, 2): "+parseInt(a,2));d=[];d.push({StatisticName:"WinLoss",Version:"0",Value:f});a={StatisticName:"TrophyCount",Version:"0",Value:e};d.push(a);a={StatisticName:"League",Version:"0",Value:h};d.push(a);server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:d});if("rOot"==b.outcome){var p={TrophyCount:e};return{Result:p}}a=JSON.parse(g.Data.SubdivisionTrophyRanges);log.debug("SubdivisionTrophyRanges "+a);for(d=0;d<a.subdivisions.length;d++)if(c<
a.subdivisions[d]){p=d;break}log.debug("user is in subdivision "+p);d=[];d.push({Key:b.envIndex+"_"+b.courseIndex+"_RecPos",Value:b.recordingPos});d.push({Key:b.envIndex+"_"+b.courseIndex+"_RecRot",Value:b.recordingRot});d.push({Key:b.envIndex+"_"+b.courseIndex+"_RecHeader",Value:b.recordingHeader});log.debug("updating user read only data ");d=server.UpdateUserReadOnlyData({PlayFabId:currentPlayerId,Data:d});log.debug("updated user read only data for "+currentPlayerId+" "+d);d=server.GetTitleInternalData({Key:"RecSubDivision"+
p}).Data["RecSubDivision"+p];log.debug("recPool: "+d);if(void 0==d)a=[],k={wl:k,e:b.envIndex,c:b.courseIndex,uId:currentPlayerId},a.push(k),d=JSON.stringify(a),log.debug("recArray: "+d);else{a=JSON.parse(d);log.debug("recArray: "+a);k={wl:k,e:b.envIndex,c:b.courseIndex,uId:currentPlayerId};g=!1;for(d=0;d<a.length;d++)if(a[d].e==b.envIndex&&a[d].c==b.courseIndex){g=!0;a[d]=k;if(1==a.length)break;if(0<d)if(a[d].wl>a[d-1].wl){if(d==a.length-1)break;for(c=d+1;c<a.length;c++)if(a[c-1].wl>a[c].wl)f=a[c],
a[c]=a[c-1],a[c-1]=f;else break}else for(c=d-1;0<=c;c--)if(a[c+1].wl<a[c].wl)f=a[c],a[c]=a[c+1],a[c+1]=f;else break;else for(c=d+1;c<a.length;c++)if(a[c-1].wl>a[c].wl)f=a[c],a[c]=a[c-1],a[c-1]=f;else break}0==g&&(log.debug("recArrayLNbefore: "+a.length),a.push(k),log.debug("recArrayLNafter: "+a.length));d=JSON.stringify(a);log.debug("titleKeyVal: "+d)}server.SetTitleInternalData({Key:"RecSubDivision"+p,Value:d});p={TrophyCount:e};return{Result:p}};
handlers.startGame=function(b,l){var a="01",f=50,e=0,d=server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["WinLoss"]});if(0!=d.Statistics.length){for(var a=d.Statistics[0].Value.toString(),a=Number(a).toString(2),f=a.length,k=0;k<a.length;k++)"1"==a[k]&&e++;f=Math.round(e/f*100)}log.debug("wlStatBeforeshiftandAdd "+a);a+="0";log.debug("wlStatBeforeshift "+a);20<a.length&&a.shift();log.debug("wlStat "+a);d=server.GetTitleData({Key:["LeagueSubdivisions","SubdivisionTrophyRanges"]});
k=server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["TrophyCount"]});e=0;0!=k.Statistics.length&&(e=k.Statistics[0].Value);d=JSON.parse(d.Data.SubdivisionTrophyRanges);log.debug("SubdivisionTrophyRanges "+d);for(var g,k=0;k<d.subdivisions.length;k++)if(e<d.subdivisions[k]){g=k;break}log.debug("user is in subdivision "+g);g=server.GetTitleInternalData({Keys:"RecSubDivision"+g}).Data["RecSubDivision"+g];log.debug("recPool "+g);if(void 0==g)return generateErrObj("Recording pool for this subdivision is null");
log.debug("parsing to json array");var c=JSON.parse(g),h=c[c.length-1].uId;g=c[c.length-1].e;d=c[c.length-1].c;for(k=0;k<c.length;k++)if(f<c[k].wl){h=c[k].uId;g=c[k].e;d=c[k].c;break}f=[g+"_"+d+"_RecPos",g+"_"+d+"_RecRot",g+"_"+d+"_RecHeader"];log.debug("requesting "+f);f=server.GetUserReadOnlyData({PlayFabId:h,Keys:f});if(void 0==f)return generateErrObj("Did not find recording for this user: "+h);k=server.GetPlayerCombinedInfo({PlayFabId:h,InfoRequestParameters:{GetUserAccountInfo:!0,GetUserInventory:!1,
GetUserVirtualCurrency:!1,GetUserData:!1,GetUserReadOnlyData:!1,GetCharacterInventories:!1,GetCharacterList:!1,GetTitleData:!1,GetPlayerStatistics:!1}});e-=30;0>=e&&(e=0);a=parseInt(a,2);log.debug("updating WL to:  "+a);h=calculateLeague(e);c=[];c.push({StatisticName:"WinLoss",Version:"0",Value:a});c.push({StatisticName:"TrophyCount",Version:"0",Value:e});c.push({StatisticName:"League",Version:"0",Value:h});log.debug("updatingStats: "+c);server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:c});
return{Result:"OK",PosData:f.Data[g+"_"+d+"_RecPos"].Value,RotData:f.Data[g+"_"+d+"_RecRot"].Value,HeaderData:f.Data[g+"_"+d+"_RecHeader"].Value,Opp:k.InfoResultPayload.AccountInfo.TitleInfo.DisplayName}};
handlers.updateTrophyCount=function(b,l){var a=0,f=server.GetPlayerStatistics({PlayFabId:currentPlayerId,StatisticNames:["TrophyCount"]});0!=f.Statistics.length&&(a=f.Statistics[0].Value);"rStart"==b.val&&(a-=30);0>a&&(a=0);"rWin"==b.val&&(a+=60);if("rLose"==b.val)return{val:a};f=[];f.push({StatisticName:"TrophyCount",Version:"0",Value:a});server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:f});if("rWin"==b.val)return{val:a}};
handlers.initServerData=function(b){b=[];var l={StatisticName:"TrophyCount",Version:"0",Value:"0"};b.push(l);l={StatisticName:"League",Version:"0",Value:"0"};b.push(l);server.UpdatePlayerStatistics({PlayFabId:currentPlayerId,Statistics:b});b=[];b.push("Decals");b.push("PaintJobs");b.push("Plates");b.push("Rims");b.push("WindshieldText");b=server.GrantItemsToUser({CatalogVersion:"Customization",PlayFabId:currentPlayerId,ItemIds:b});for(var l={0:"Owned"},a=0;a<b.ItemGrantResults.length;a++)server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:b.ItemGrantResults[a].ItemInstanceId,Data:l});b=[];b.push("FordFocus");b=server.GrantItemsToUser({CatalogVersion:"CarsProgress",PlayFabId:currentPlayerId,ItemIds:b});l={CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l});l={TiresLvl:"0",TurboLvl:"0",PaintId:"0",DecalId:"0",RimsId:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l});l={PlatesId:"0",WindshieldId:"0",Pr:"10"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:b.ItemGrantResults[0].ItemInstanceId,Data:l});server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:"SC",Amount:3E3});server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:"HC",Amount:200})};
handlers.requestInventory=function(b){b=server.GetUserInventory({PlayFabId:currentPlayerId});for(var l=server.GetCatalogItems({CatalogVersion:"CarCards"}),a=server.GetCatalogItems({CatalogVersion:"PartCards"}),f=0;f<b.Inventory.length;f++)if("CarsProgress"==b.Inventory[f].CatalogVersion){log.debug("found "+b.Inventory[f].ItemId);b.Inventory[f].CustomData.Pr=recalculateCarPr(b.Inventory[f].CustomData,b.Inventory[f].ItemId,l,a);var e={};e.Pr=b.Inventory[f].CustomData.Pr;server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:b.Inventory[f].ItemInstanceId,Data:e})}return b};function generateFailObj(b){return{Result:"Failed",Message:b}}function generateErrObj(b){return{Result:"Error",Message:b}}function checkBalance(b,l,a,f){if("SC"==b){if(a<l)return generateFailObj("NotEnoughSC")}else if(f<l)return generateFailObj("NotEnoughHC");return"OK"}
function calculateLeague(b){td=server.GetTitleData({Keys:["LeagueSubdivisions","SubdivisionTrophyRanges"]});if(void 0==td.Data.LeagueSubdivisions||void 0==td.Data.SubdivisionTrophyRanges)return 1;for(var l=JSON.parse(td.Data.LeagueSubdivisions).leagues,a=JSON.parse(td.Data.SubdivisionTrophyRanges).subdivisions,f=0;f<l.length;f++)if(!(Number(b)<Number(a[l[f]])))return f}
function recalculateCarPr(b,l,a,f){var e=0,d;d=void 0==a?server.GetCatalogItems({CatalogVersion:"CarCards"}):a;for(a=0;a<d.Catalog.length;a++)if(d.Catalog[a].ItemId==l){a=JSON.parse(d.Catalog[a].CustomData);e+=parseInt(a.basePr)+parseInt(a.prPerLvl)*(parseInt(b.CarLvl)-1);break}f=void 0==f?server.GetCatalogItems({CatalogVersion:"PartCards"}):f;b={Exhaust:b.ExhaustLvl,Engine:b.EngineLvl,Gearbox:b.GearboxLvl,Suspension:b.SuspensionLvl,Tires:b.TiresLvl,Turbo:b.TurboLvl};for(a=0;a<f.Catalog.length;a++)l=
JSON.parse(f.Catalog[a].CustomData),e+=parseInt(l.basePr)+parseInt(l.prPerLvl)*b[f.Catalog[a].ItemId];return e}
function GenerateBlackMarket(b){var l=server.GetCatalogItems({CatalogVersion:"PartCards"}),a={};a.BMTime=(new Date).getTime();var f=Math.floor(Math.random()*l.Catalog.length),e=JSON.parse(l.Catalog[f].CustomData);if(void 0==e)return generateErrObj("Part card "+l.Catalog[k].ItemId+" has no custom data.");a.BMItem0=l.Catalog[f].ItemId+"_"+e.BMCurrType+"_"+e.BMbasePrice+"_0_"+e.BMpriceIncrPerBuy;var d=Math.floor(Math.random()*l.Catalog.length);d==f&&(d=l.Catalog.length-f-1);e=JSON.parse(l.Catalog[d].CustomData);
if(void 0==e)return generateErrObj("Part card "+l.Catalog[k].ItemId+" has no custom data.");a.BMItem1=l.Catalog[d].ItemId+"_"+e.BMCurrType+"_"+e.BMbasePrice+"_0_"+e.BMpriceIncrPerBuy;for(var l=server.GetCatalogItems({CatalogVersion:"CarCards"}),e=[],d=[],k=0;k<l.Catalog.length;k++){f=JSON.parse(l.Catalog[k].CustomData);if(void 0==f)return generateErrObj("Car card "+l.Catalog[k].ItemId+" has no custom data.");"false"==f.rareCar?e.push(l.Catalog[k].ItemId+"_"+f.BMCurrType+"_"+f.BMbasePrice+"_0_"+f.BMpriceIncrPerBuy):
d.push(l.Catalog[k].ItemId+"_"+f.BMCurrType+"_"+f.BMbasePrice+"_0_"+f.BMpriceIncrPerBuy)}0>=e.length?(a.BMItem2=d[Math.floor(Math.random()*d.length)],a.BMItem3=d[Math.floor(Math.random()*d.length)]):0>=d.length?(a.BMItem2=e[Math.floor(Math.random()*e.length)],a.BMItem3=e[Math.floor(Math.random()*e.length)]):(a.BMItem2=e[Math.floor(Math.random()*e.length)],a.BMItem3=d[Math.floor(Math.random()*d.length)]);server.UpdateUserInternalData({PlayFabId:b,Data:a});k=[];k.push("BlackMarketResetMinutes");b=server.GetTitleData({PlayFabId:b,
Keys:k});a.BMTime=60*parseInt(b.Data.BlackMarketResetMinutes);return a}function GetCurrentBlackMarket(b,l){var a={},f=new Date,e=[];e.push("BlackMarketResetMinutes");e=server.GetTitleData({PlayFabId:b,Keys:e});a.BMTime=60*parseInt(e.Data.BlackMarketResetMinutes)-Math.floor((f.getTime()-l.Data.BMTime.Value)/1E3);for(f=0;4>f;f++)a["BMItem"+f]=l.Data["BMItem"+f].Value;return a}
handlers.purchaseBMItem=function(b,l){log.debug("purchasing item "+b.itemId+" from black market");if(0>b.itemId||3<b.itemId)return generateFailObj("invalid item index");var a=[];a.push("BMItem"+b.itemId);var a=server.GetUserInternalData({PlayFabId:currentPlayerId,Keys:a}),f=server.GetUserInventory({PlayFabId:currentPlayerId}),a=a.Data["BMItem"+b.itemId].Value.split("_");log.debug("userArray: "+a);var e=f.VirtualCurrency[a[1]];5!=a.length&&generateErrObj("User Black Market corrupted. Try again tomorrow");
var d;d=2>b.itemId?"PartCards":"CarCards";var k=parseInt(a[2])+parseInt(a[3])*parseInt(a[4]),e=checkBalance(a[1],k,e,e);if("OK"!=e)return e;var g,c;log.debug("searching for: "+a[0]+" in "+d);for(e=0;e<f.Inventory.length;e++)if(f.Inventory[e].ItemId==a[0]&&f.Inventory[e].CatalogVersion==d){log.debug("found it!");g=f.Inventory[e].ItemInstanceId;void 0==f.Inventory[e].CustomData?(log.debug("no custom data. creating ..."),c={Amount:1}):void 0==f.Inventory[e].CustomData.Amount?c={Amount:1}:(c=Number(f.Inventory[e].CustomData.Amount)+
1,isNaN(c)&&(c=1),c={Amount:c});server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:g,Data:c});break}void 0==g&&(log.debug("cardInstance is undefined"),g=[],g.push(a[0]),g=server.GrantItemsToUser({CatalogVersion:d,PlayFabId:currentPlayerId,ItemIds:g}).ItemGrantResults[0].ItemInstanceId,void 0==g?generateErrObj("grantRequest denied"):(c={Amount:1},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:g,Data:c})));g=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,
VirtualCurrency:a[1],Amount:k});k=a[0]+"_"+a[1]+"_"+a[2]+"_"+(parseInt(a[3])+1)+"_"+a[4];log.debug("generatedArray: "+k);f={};f["BMItem"+b.itemId]=k;server.UpdateUserInternalData({PlayFabId:currentPlayerId,Data:f});c=[{ItemId:a[0],CatalogVersion:d,CustomData:c}];d={};d[g.VirtualCurrency]=g.Balance;a=b.itemId+"_"+a[2]+"_"+(parseInt(a[3])+1)+"_"+a[4];e={Inventory:c,VirtualCurrency:d};return{Result:"OK",Message:"InventoryUpdate",InventoryChange:e,BMItemChange:a}};
handlers.retrieveBlackMarket=function(b,l){var a=[];a.push("BMTime");for(var f=0;4>f;f++)a.push("BMItem"+f);a=server.GetUserInternalData({PlayFabId:currentPlayerId,Keys:a});if(void 0==a.Data.BMTime)return log.debug("No user BM data detected; generating ..."),GenerateBlackMarket(currentPlayerId);f=new Date;log.debug("milliseconds passed: "+f.getTime());log.debug("BMTime: "+a.Data.BMTime.Value);var e=[];e.push("BlackMarketResetMinutes");e=server.GetTitleData({PlayFabId:currentPlayerId,Keys:e});if(f.getTime()-
parseInt(a.Data.BMTime.Value)>6E4*parseInt(e.Data.BlackMarketResetMinutes))return log.debug("regenerating market"),GenerateBlackMarket(currentPlayerId);log.debug("get current market");return GetCurrentBlackMarket(currentPlayerId,a)};
handlers.updateCarCust=function(b,l){for(var a=server.GetUserInventory({PlayFabId:currentPlayerId}),f=[],e="-1",d={},k={PaintJobs:{itemOwned:"no",itemCustData:b.paintId,carItemId:"PaintId"},Decals:{itemOwned:"no",itemCustData:b.decalId,carItemId:"DecalId"},Plates:{itemOwned:"no",itemCustData:b.platesId,carItemId:"PlatesId"},Rims:{itemOwned:"no",itemCustData:b.rimsId,carItemId:"RimsId"},WindshieldText:{itemOwned:"no",itemCustData:b.wsId,carItemId:"WindshieldId"}},g=0;g<a.Inventory.length;g++)a.Inventory[g].ItemId==
b.carId&&"CarsProgress"==a.Inventory[g].CatalogVersion&&(e=a.Inventory[g].ItemInstanceId),a.Inventory[g].ItemId in k&&(k[a.Inventory[g].ItemId].itemOwned="yes",k[a.Inventory[g].ItemId].itemCustData in a.Inventory[g].CustomData?d[k[a.Inventory[g].ItemId].carItemId]=k[a.Inventory[g].ItemId].itemCustData:log.debug("user doesn't own: "+a.Inventory[g].ItemId+" "+k[a.Inventory[g].ItemId].itemCustData));if("-1"==e)return generateFailObj("User does not own car with id: "+b.carId);for(var c in k)k.hasOwnProperty(c)&&
"no"==k[c].itemOwned&&f.push(c);if(d=={})return generateFailObj("User doesn't own any of those customizations");server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:e,Data:d});a=[{ItemId:b.carId,CatalogVersion:"CarsProgress",CustomData:d}];if(0<f.length)for(f=server.GrantItemsToUser({CatalogVersion:"Customization",PlayFabId:currentPlayerId,ItemIds:f}),e={0:"Owned"},g=0;g<f.ItemGrantResults.length;g++)server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:f.ItemGrantResults[g].ItemInstanceId,Data:e});return{Result:"OK",Message:"InventoryUpdate",InventoryChange:{Inventory:a}}};
handlers.purchaseItems=function(b,l){log.debug("RETRIEVING USER INVENTORY");var a=server.GetUserInventory({PlayFabId:currentPlayerId}),f=a.VirtualCurrency.SC,e=a.VirtualCurrency.HC;log.debug("user currency: SC: "+f+" HC: "+e);switch(b.purchaseType){case "carUpgrade":log.debug("== carUpgrade request: carId: "+b.carId);log.debug("RETRIEVING CARDS CATALOGUE");for(var d=server.GetCatalogItems({CatalogVersion:"CarCards"}),k=!1,g,c=0;c<a.Inventory.length;c++)if(a.Inventory[c].ItemId==b.carId&&"CarsProgress"==
a.Inventory[c].CatalogVersion){k=!0;log.debug("car is in user's inventory!");g=a.Inventory[c];break}for(var h,c=0;c<d.Catalog.length;c++)if(d.Catalog[c].ItemId==b.carId){h=JSON.parse(d.Catalog[c].CustomData);log.debug("cardInfo found!");break}if(void 0==h)return log.error("cardInfo undefined!"),h={Result:"Error",Message:"CardNotFoundForCarwithID: "+b.carId+". It is possible that the carCard ID and the Car ID do not coincide. Check Playfab catalog data."};if(1==k){log.debug("user has car: "+b.carId+
"... upgrading");var p=parseInt(h.baseCurrCost)+parseInt(g.CustomData.CarLvl)*parseInt(h.currCostPerLvl),e=checkBalance(h.currType,p,f,e);if("OK"!=e)return e;log.debug("user has enough currency. Let's check for card balance");e=parseInt(h.baseCardCost)+parseInt(g.CustomData.CarLvl)*parseInt(h.cardCostPerLvl);log.debug("cardCost: "+e);for(var r=!1,q,c=0;c<a.Inventory.length;c++)if(a.Inventory[c].ItemId==b.carId&&"CarCards"==a.Inventory[c].CatalogVersion){log.debug("consuming: "+a.Inventory[c].ItemInstanceId);
r=!0;try{if(void 0==a.Inventory[c].CustomData)return generateFailObj("Insufficient cards, CusotmData undefined");if(void 0==a.Inventory[c].CustomData.Amount)return generateFailObj("Insufficient cards, CusotmData.Amount udnefined");if(Number(a.Inventory[c].CustomData.Amount)>=e)a.Inventory[c].CustomData.Amount-=e,q={Amount:a.Inventory[c].CustomData.Amount},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.Inventory[c].ItemInstanceId,Data:q});else return generateFailObj("Insufficient cards for real: "+
a.Inventory[c].CustomData.Amount+" vs "+e)}catch(u){return log.debug("itemConsumptionResult.errorCode "+u),generateFailObj("Insufficient cards")}break}if(0==r)return generateFailObj("No cards found");log.debug("user has enough cards to purchase upgrade!");c=parseInt(g.CustomData.CarLvl)+1;a=recalculateCarPr(g.CustomData,g.ItemId,d,void 0);log.debug("upgrading to car lvl: "+c+" and pr: "+a);c={CarLvl:c,Pr:a};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:g.ItemInstanceId,
Data:c});var m;0<p&&(m=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:h.currType,Amount:p}));log.debug("Upgrade Complete!");a=[{ItemId:b.carId,CatalogVersion:"CarCards",CustomData:q},{ItemId:b.carId,CatalogVersion:"CarsProgress",CustomData:c}];h={};c={Inventory:a};void 0!=m&&(h[m.VirtualCurrency]=m.Balance,c.VirtualCurrency=h);h={Result:"OK",Message:"InventoryUpdate",InventoryChange:c}}else{log.debug("user doesn't have car: "+b.carId+"... looking for card");for(var r=
!1,t,c=0;c<a.Inventory.length;c++)if(a.Inventory[c].ItemId==b.carId&&"CarCards"==a.Inventory[c].CatalogVersion){log.debug("consuming: "+a.Inventory[c].ItemInstanceId);r=!0;try{if(void 0==a.Inventory[c].CustomData)return generateFailObj("Insufficient cards, CustomData null");if(void 0==a.Inventory[c].CustomData.Amount)return generateFailObj("Insufficient cards, CustomData.Amount null");if(Number(a.Inventory[c].CustomData.Amount)>=Number(h.baseCardCost))t=a.Inventory[c].ItemInstanceId,a.Inventory[c].CustomData.Amount-=
h.baseCardCost,q={Amount:a.Inventory[c].CustomData.Amount};else return generateFailObj("Insufficient cards: "+a.Inventory[c].CustomData.Amount+" vs "+h.baseCardCost+".")}catch(u){return generateFailObj("Insufficient cards: "+u)}break}if(0==r)return generateFailObj("No cards found");log.debug("user has enough cards to purchase car. Checking if enough currency is availabe");e=checkBalance(h.currType,h.baseCurrCost,f,e);if("OK"!=e)return e;c=[];c.push(b.carId);e=server.GrantItemsToUser({CatalogVersion:"CarsProgress",
PlayFabId:currentPlayerId,ItemIds:c});if(0==e.ItemGrantResults[0].Result)return log.error("Something went wrong while giving user the item, refunding cards"),generateFailObj("Something went wrong while giving user the item, refunding cards.");server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:t,Data:q});0<h.baseCurrCost&&(m=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:h.currType,Amount:h.baseCurrCost}));c={CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",
GearboxLvl:"0",SuspensionLvl:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:e.ItemGrantResults[0].ItemInstanceId,Data:c});c={TiresLvl:"0",TurboLvl:"0",PaintId:h.defaultPaintID,DecalId:"0",RimsId:"0"};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:e.ItemGrantResults[0].ItemInstanceId,Data:c});c={PlatesId:"0",WindshieldId:"0",Pr:h.basePr};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:e.ItemGrantResults[0].ItemInstanceId,
Data:c});g=e=!1;for(var n,c=0;c<a.Inventory.length;c++)if("PaintJobs"==a.Inventory[c].ItemId){g=!0;log.debug("user has paintjobs");void 0!=a.Inventory[c].CustomData?(log.debug("user has paintjobs customData"),h.defaultPaintID in a.Inventory[c].CustomData?(log.debug("user has paintjob already"),e=!0):(log.debug("user doesn't have paintjob"),n={},n[h.defaultPaintID]="Owned")):(n={},n[h.defaultPaintID]="Owned");void 0!=n&&server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.Inventory[c].ItemInstanceId,
Data:n});break}0==g&&(paintToGive=[],paintToGive.push("PaintJobs"),a=server.GrantItemsToUser({CatalogVersion:"Customization",PlayFabId:currentPlayerId,ItemIds:paintToGive}),n={},n[h.defaultPaintID]="Owned",server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.ItemGrantResults[0].ItemInstanceId,Data:n}));c={CarLvl:"1",EngineLvl:"0",ExhaustLvl:"0",GearboxLvl:"0",SuspensionLvl:"0",TiresLvl:"0",TurboLvl:"0",PaintId:h.defaultPaintID,DecalId:"0",RimsId:"0",PlatesId:"0",WindshieldId:"0",
Pr:h.basePr};a=[{ItemId:b.carId,CatalogVersion:"CarCards",CustomData:q},{ItemId:b.carId,CatalogVersion:"CarsProgress",CustomData:c}];0==e&&(c={},c[h.defaultPaintID]="Owned",a.push({ItemId:"PaintJobs",CatalogVersion:"Customization",CustomData:c}));h={};c={Inventory:a};void 0!=m&&(h[m.VirtualCurrency]=m.Balance,c.VirtualCurrency=h);h={Result:"OK",Message:"InventoryUpdateNewCar",InventoryChange:c}}return h;case "partUpgrade":log.debug("Upgrading Part: "+b.partId+" on Car: "+b.carId);log.debug("Checking to see if car exists in catalog");
q=server.GetCatalogItems({CatalogVersion:"CarsProgress"});n=!1;for(c=0;c<q.Catalog.length;c++)if(q.Catalog[c].ItemId==b.carId){n=!0;break}if(0==n)return log.error("invalid car ID"),h={Result:"Error",Message:"car with ID: "+b.carId+" not found in catalog."};log.debug("Checking to see if part exists in catalog");q=server.GetCatalogItems({CatalogVersion:"PartCards"});n=!1;for(c=0;c<q.Catalog.length;c++)if(q.Catalog[c].ItemId==b.partId){h=JSON.parse(q.Catalog[c].CustomData);n=!0;break}if(0==n)return log.error("invalid part ID"),
h={Result:"Error",Message:"part with ID: "+b.partId+" not found in catalog."};log.debug("Checking to see if user has car: "+b.carId);k=!1;for(c=0;c<a.Inventory.length;c++)if(a.Inventory[c].ItemId==b.carId&&"CarsProgress"==a.Inventory[c].CatalogVersion){k=!0;log.debug("car is in user's inventory!");g=a.Inventory[c];break}if(0==k)return generateFailObj("car with ID: "+b.carId+" not found in user inventory.");log.debug("Checking to see if user has part and or has enough parts");n=!1;for(c=0;c<a.Inventory.length;c++)if(a.Inventory[c].ItemId==
b.partId&&"PartCards"==a.Inventory[c].CatalogVersion){n=!0;log.debug("part is in user's inventory!");d={};k={Exhaust:"ExhaustLvl",Engine:"EngineLvl",Gearbox:"GearboxLvl",Suspension:"SuspensionLvl",Tires:"TiresLvl",Turbo:"TurboLvl"};log.debug("calculating "+b.partId+" cost and modifying "+k[b.partId]);t=parseInt(h.baseCardCost)+parseInt(g.CustomData[k[b.partId]])*parseInt(h.cardCostPerLvl);var p=parseInt(h.baseCurrCost)+parseInt(g.CustomData[k[b.partId]])*parseInt(h.currCostPerLvl),v=parseInt(g.CustomData[k[b.partId]])+
1;d[k[b.partId]]=v;g.CustomData[k[b.partId]]=v;log.debug("we need: "+t+" cards");e=checkBalance(h.currType,p,f,e);if("OK"!=e)return e;log.debug("consuming part instance: "+a.Inventory[c].ItemInstanceId);try{if(void 0!=a.Inventory[c].CustomData&&void 0!=a.Inventory[c].CustomData.Amount&&a.Inventory[c].CustomData.Amount>=t)a.Inventory[c].CustomData.Amount-=t,r={Amount:a.Inventory[c].CustomData.Amount},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.Inventory[c].ItemInstanceId,
Data:r});else return generateFailObj("Insufficient cards")}catch(u){return log.debug("itemConsumptionResult.errorCode "+u),generateFailObj("Insufficient cards")}break}if(0==n)return generateFailObj("Part not found");0<p&&(m=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:h.currType,Amount:p}));a=recalculateCarPr(g.CustomData,g.ItemId,void 0,q);d.Pr=a;server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:g.ItemInstanceId,Data:d});a=[{ItemId:b.partId,
CatalogVersion:"PartCards",CustomData:r},{ItemId:b.carId,CatalogVersion:"CarsProgress",CustomData:d}];log.debug("succesfully upgraded part!");h={};c={Inventory:a};void 0!=m&&(h[m.VirtualCurrency]=m.Balance,c.VirtualCurrency=h);return h={Result:"OK",Message:"InventoryUpdatePart",InventoryChange:c};case "custPurchase":log.debug("Purchasing Customization: "+b.custId+" with val: "+b.custVal);log.debug("Checking to see if customization exists in catalog");g=server.GetCatalogItems({CatalogVersion:"Customization"});
h=0;m="SC";for(c=0;c<g.Catalog.length;c++)if(g.Catalog[c].ItemId==b.custId){v=g.Catalog[c];h=JSON.parse(g.Catalog[c].CustomData);c=b.custVal+",Cost";m=h[b.custVal+",Curr"];h=h[c];e=checkBalance(m,h,f,e);if("OK"!=e)return e;log.debug("custCurr: "+m);log.debug("custPrice: "+h);break}if(void 0==v)return log.error("Customization does not exist in catalog"),h={Result:"Error",Message:"Customization does not exist in catalog."};log.debug("Checking to see if user has said customization");for(var w,c=0;c<
a.Inventory.length;c++)if(a.Inventory[c].ItemId==b.custId){log.debug("user has customization category!");w=a.Inventory[c];k=a.Inventory[c].ItemInstanceId;if(void 0!=w.CustomData&&String(b.custVal)in w.CustomData)return generateFailObj("User already has this customization.");break}if(void 0==w){log.info("user doesn't have customization category. Granting ... ");c=[];c.push(b.custId);a=server.GrantItemsToUser({CatalogVersion:"Customization",PlayFabId:currentPlayerId,ItemIds:c});if(0==a.ItemGrantResults[0].Result)return log.error("something went wrong while granting user customization class object"),
h={Result:"Error",Message:"something went wrong while granting user customization class object."};k=a.ItemGrantResults[0].ItemInstanceId}a={};a[String(b.custVal)]="Owned";server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:k,Data:a});a=[{ItemId:b.custId,CatalogVersion:"Customization",CustomData:a}];0<h?(m=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:m,Amount:h}),h={},h[m.VirtualCurrency]=m.Balance,c={Inventory:a,VirtualCurrency:h}):c=
{Inventory:a};return h={Result:"OK",Message:"InventoryUpdateNewCustomization",InventoryChange:c};case "softCurrencyPurchase":log.debug("Purchasing pack: "+b.packId);log.debug("Checking to see if pack exists in catalog");m=server.GetCatalogItems({CatalogVersion:"SoftCurrencyStore"});a=!1;for(c=g=0;c<m.Catalog.length;c++)if(m.Catalog[c].ItemId==b.packId){g=m.Catalog[c].VirtualCurrencyPrices.HC;h=JSON.parse(m.Catalog[c].CustomData);a=!0;break}if(0==a)return h={Result:"Error",Message:"pack with ID: "+
b.packId+" not found in catalog."};if(0>=g)return h={Result:"Error",Message:"pack with ID: "+b.packId+" shouldn't have negative cost."};if(g>e)return generateFailObj("Not enough HC.");m=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:"HC",Amount:g});a=server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:"SC",Amount:h.quantity});h={};h[a.VirtualCurrency]=a.Balance;h[m.VirtualCurrency]=m.Balance;return h={Result:"OK",Message:"SoftCurrencyPurchased",
InventoryChange:{VirtualCurrency:h}};default:log.debug("invalid purchase parameter")}};handlers.giveMoney=function(b){b=server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:b.curr,Amount:b.amount});var l={};l[b.VirtualCurrency]=b.Balance;return{Result:"OK",Message:"CurrencyChanged",InventoryChange:{VirtualCurrency:l}}};
handlers.grantItems=function(b){for(var l=server.GetUserInventory({PlayFabId:currentPlayerId}),a,f=!1,e=0;e<l.Inventory.length;e++)if(l.Inventory[e].ItemId==b.itemId&&l.Inventory[e].CatalogVersion==b.catalogId){log.debug("adding amount to: "+l.Inventory[e].ItemInstanceId);a=void 0==l.Inventory[e].CustomData?b.amount:void 0==l.Inventory[e].CustomData.Amount?b.amount:isNaN(Number(l.Inventory[e].CustomData.Amount))?b.amount:Number(l.Inventory[e].CustomData.Amount)+b.amount;a={Amount:a};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,
ItemInstanceId:l.Inventory[e].ItemInstanceId,Data:a});f=!0;break}0==f&&(l=[],l.push(b.itemId),l=server.GrantItemsToUser({CatalogVersion:b.catalogId,PlayFabId:currentPlayerId,ItemIds:l}),a={Amount:b.amount},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:l.ItemGrantResults[0].ItemInstanceId,Data:a}));return{Result:"OK",Message:"InventoryUpdated",InventoryChange:{Inventory:[{ItemId:b.itemId,CatalogVersion:b.catalogId,CustomData:a}]}}};
handlers.openChest=function(b,l){var a=server.GetUserInventory({PlayFabId:currentPlayerId});if(0<b.currCost){if("OK"!=checkBalance(b.currType,b.currCost,a.VirtualCurrency.SC,a.VirtualCurrency.HC))return generateFailObj("not enough money");server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:b.currType,Amount:b.currCost})}for(var f in b.currencyReq)0<b.currencyReq[f]&&server.AddUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:f,Amount:b.currencyReq[f]});var e;
for(f in b.carCardsRequest)if(log.debug(f+" : "+b.carCardsRequest[f]),b.carCardsRequest.hasOwnProperty(f)){e=!1;log.debug("looking for: "+f);for(var d=0;d<a.Inventory.length;d++)if(a.Inventory[d].ItemId==f&&"CarCards"==a.Inventory[d].CatalogVersion){log.debug("adding amount to: "+a.Inventory[d].ItemInstanceId);e=void 0==a.Inventory[d].CustomData?Number(b.carCardsRequest[f]):void 0==a.Inventory[d].CustomData.Amount?Number(b.carCardsRequest[f]):isNaN(Number(a.Inventory[d].CustomData.Amount))?Number(b.carCardsRequest[f]):
Number(a.Inventory[d].CustomData.Amount)+Number(b.carCardsRequest[f]);e={Amount:e};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.Inventory[d].ItemInstanceId,Data:e});e=!0;break}0==e&&(d=[f],d=server.GrantItemsToUser({CatalogVersion:"CarCards",PlayFabId:currentPlayerId,ItemIds:d}),e={Amount:b.carCardsRequest[f]},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:d.ItemGrantResults[0].ItemInstanceId,Data:e}))}for(f in b.partCardsRequest)if(log.debug(f+
" : "+b.partCardsRequest[f]),b.partCardsRequest.hasOwnProperty(f)){e=!1;log.debug("looking for: "+f);for(d=0;d<a.Inventory.length;d++)if(a.Inventory[d].ItemId==f&&"PartCards"==a.Inventory[d].CatalogVersion){log.debug("adding amount to: "+a.Inventory[d].ItemInstanceId);e=void 0==a.Inventory[d].CustomData?Number(b.partCardsRequest[f]):void 0==a.Inventory[d].CustomData.Amount?Number(b.partCardsRequest[f]):isNaN(Number(a.Inventory[d].CustomData.Amount))?Number(b.partCardsRequest[f]):Number(a.Inventory[d].CustomData.Amount)+
Number(b.partCardsRequest[f]);e={Amount:e};server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:a.Inventory[d].ItemInstanceId,Data:e});e=!0;break}0==e&&(d=[f],d=server.GrantItemsToUser({CatalogVersion:"PartCards",PlayFabId:currentPlayerId,ItemIds:d}),e={Amount:b.partCardsRequest[f]},server.UpdateUserInventoryItemCustomData({PlayFabId:currentPlayerId,ItemInstanceId:d.ItemGrantResults[0].ItemInstanceId,Data:e}))}return{Result:"OK",Message:"InventoryUpdated",InventoryChange:server.GetUserInventory({PlayFabId:currentPlayerId})}};
handlers.buyChest=function(b,l){var a=server.GetUserInventory({PlayFabId:currentPlayerId});if("OK"!=checkBalance(b.curr,b.cost,a.VirtualCurrency.SC,a.VirtualCurrency.HC))return generateFailObj("not enough money");var a=server.SubtractUserVirtualCurrency({PlayFabId:currentPlayerId,VirtualCurrency:b.curr,Amount:b.cost}),f={};f[a.VirtualCurrency]=a.Balance;return{Result:"OK",Message:"ChestBought",InventoryChange:{VirtualCurrency:f}}};handlers.getServerTime=function(b,l){return{time:new Date}};
